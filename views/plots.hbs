<script
			  src="https://code.jquery.com/jquery-3.2.1.min.js"
			  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
			  crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
<div class="container-fluid">
	<div id="myCarousel" class="carousel slide" data-ride="carousel">
<!-- Indicators -->
<ol class="carousel-indicators">
<li data-target="#myCarousel" data-slide-to="0" class="active"></li>
<li data-target="#myCarousel" data-slide-to="1"></li>
<li data-target="#myCarousel" data-slide-to="2"></li>
</ol>

<div class="carousel-inner">
			{{#each regions}}
								{{@index}}<!--If regions index == 0 add class active to div else nothing -->
								<div class="item active">
									<canvas id="myChart{{this.key}}" width="400" height="200"></canvas>
								</div>


			{{/each}}
</div>

<!--

<div>
	<canvas id="myChart{{this.key}}" width="400" height="200"></canvas>
<div>

-->
<!-- Wrapper for slides -->
<!--<div class="carousel-inner">
<div class="item active">
 <img src="images/bubble.jpg" alt="Los Angeles" style="width:100%;">
</div>

<div class="item">
 <img src="images/city.jpg" alt="Chicago" style="width:100%;">
</div>

<div class="item">
 <img src="images/bubble.jpg" alt="New york" style="width:100%;">
</div>
</div>-->

<!-- Left and right controls -->
<a class="left carousel-control" href="#myCarousel" data-slide="prev">
<span class="glyphicon glyphicon-chevron-left"></span>
<span class="sr-only">Previous</span>
</a>
<a class="right carousel-control" href="#myCarousel" data-slide="next">
<span class="glyphicon glyphicon-chevron-right"></span>
<span class="sr-only">Next</span>
</a>
</div>

</div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>


<!-- <script src="../node_modules/chart.js/dist/Chart.bundle.js"></script> -->
	<!-- <script src="../node_modules/hammerjs/hammer.min.js"></script> -->
    <script src="/javascripts/hammer.js"></script>
  <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js"></script> -->
  <script src="/javascripts/zoom.js"></script>

<script>
$(document).ready(function(){

  function replaceAll(str, find, replace) {
      return str.replace(new RegExp(find, 'g'), replace);
  }
{{#each regions}}
  var popData{{this.key}}=replaceAll('{{this.data}}','&quot;','"');
  popData{{this.key}}=JSON.parse(popData{{this.key}});
  new Chart(document.getElementById("myChart{{this.key}}"), {
      type: 'bubble',
      data: {
        labels: "Africa",
        datasets:popData{{this.key}}
      },
      options: {
        legend: {
        display: false
    },
    tooltips: {
        callbacks: {
           label: function(tooltipItem) {
                  return tooltipItem.yLabel;
           }
        }
    },
        title: {
          display: true,
          text: 'Regional energy consumption Region: {{this.key}}'
        },
        scales: {
          yAxes: [{
            scaleLabel: {
              display: true,
              labelString: "Energy"
            }
          }],
          xAxes: [{
            scaleLabel: {
              display: true,
              labelString: "Processes"
            }
          }]
        },
          pan: {

              enabled: true,
              mode: 'xy'
          },

          zoom: {
              enabled: true,
              mode: 'xy',
          }
      }

  });
{{/each}}

});

</script>
<script>
			var Handlebars=require('handlebars');
			Handlebars.registerHelper('each_with_index', function(items, options) {
			var out = '';
						for(var i=0, l=items.length; i<l; i++) {
								var key = 'Branch-' + i;
								out = out + Spark.labelBranch(key,function(){
									options.fn({data: items[i], index: i});
								});
						}
			return out;
			});

</script>
